# -*- coding: utf-8 -*-
"""calc_cost_n_constraint.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WwNrIwkRi6fgvcZAlc2W7kcebLSmnVS0
"""

import numpy as np

def calc_cost_and_constraint(profits, weights, solution, C):
    assert len(profits) == len(weights)
    s = len(profits)

    total_cost = sum(profits[i] * solution[i] for i in range(s))
    print("Optimum value of cost function from ED= ", total_cost)

    for i in range(len(solution) - (s + 1)):
        slack = sum((2**i) * solution[s + i])

    slack += (C + 1 - 2**(len(solution) - s - 1)) * solution[-1]
    print("Total value of slack variable = ", slack)

    total_weight = sum(weights[k] * solution[k] for k in range(s))
    if (total_weight <= C):
       print("Total weight less than given constraint")
    else:
       print("Weight constraint not satisfied; wrong solution")